@property --ratio-x {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@property --correction {
  syntax: "<percent>";
  inherits: true;
  initial-value: 0%;
}

@property --ratio-y {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

// Vari√°veis para controle de amplitude
@property --perspective-amplitude {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}

@property --amplitude-x {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}

@property --amplitude-y {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}

@property --animation-speed {
  syntax: "<number>";
  inherits: true;
  initial-value: 10;
}

@property --grad1 {
  syntax: "<color>";
  inherits: true;
  initial-value: #0093ff;
}
@property --grad2 {
  syntax: "<color>";
  inherits: true;
  initial-value: #51d6fd;
}
@property --grad3 {
  syntax: "<color>";
  inherits: true;
  initial-value: var(--c1);
}
@property --grad4 {
  syntax: "<color>";
  inherits: true;
  initial-value: hsl(306deg 100% 63% / 76%);
}
@property --grad5 {
  syntax: "<color>";
  inherits: true;
  initial-value: magenta;
}
@property --grad6 {
  syntax: "<color>";
  inherits: true;
  initial-value: black;
}

:root {
  --labs-sys-color-surface: #444;
  --labs-sys-color-on-surface: hsl(0, 100%, 0%);
  --labs-sys-color-background: black;
  --labs-sys-radius-surface: 2rem;
  --c1: #ddb4eb;
  
  // Controles de amplitude
  --perspective-amplitude: 1;
  --amplitude-x: 1;
  --amplitude-y: 1;
  --animation-speed: 10;
  --grad1: #0093ff;
  --grad2: #51d6fd;
  --grad3: var(--c1);
  --grad4: hsl(306deg 100% 63% / 76%);
  --grad5: magenta;
  --grad6: black;
}

.logo {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: grid;
  place-items: center;
  z-index: 1;
  
  img {
    width: 100%;
    max-width: 500px;
    
    transform-style: preserve-3d;
    transition: all .2s linear;
    transform: perspective(calc(330px * var(--perspective-amplitude)))
      translateZ(calc(0.01rem + 0.5rem * var(--ratio-x) * var(--amplitude-x)))
      translate(
        calc(0rem + var(--ratio-x) * -1rem * var(--amplitude-x)),
        calc(0rem + var(--ratio-y) * -1rem * var(--amplitude-y))
      )
      rotateY(calc(-10deg * var(--ratio-x) * var(--amplitude-x)))
      rotateX(calc(10deg * var(--ratio-y) * var(--amplitude-y)));
  }
}

.holo-bg {
  position: absolute;
  border-radius: inherit;
  --size: 0;
  top: var(--size);
  right: var(--size);
  bottom: var(--size);
  left: var(--size);
  background: radial-gradient(
      ellipse at calc(90% - var(--ratio-x) * 20%)
        calc(0% - var(--ratio-y) * 20%),
      rgba(255, 255, 255, 0.7),
      var(--grad3) 1%,
      var(--grad4) 20%,
      transparent
    ),
    linear-gradient(
      110deg,
      var(--grad1) calc(10% - var(--ratio-x) * 20%),
      var(--grad2) calc(20% - var(--ratio-x) * 20%),
      var(--grad1) calc(30% - var(--ratio-x) * 20%),
      var(--grad4) calc(60% - var(--ratio-x) * 20%),
      transparent calc(100% - var(--ratio-x) * 20%),
      transparent
    );
  transition: all 0.2s linear, opacity 0.8s ease;
  mix-blend-mode: hard-light;
  opacity: 0.3;
}

.holo-lines {
  mask-image: url(./fundo.svg);
  mask-size: cover;
  mask-repeat: no-repeat;
  mask-position: center;
  content: "";
  position: absolute;
  border-radius: inherit;
  --size: 0.001rem;
  top: var(--size);
  right: var(--size);
  bottom: var(--size);
  left: var(--size);
  pointer-events: none;
  background: linear-gradient(
    110deg,
    var(--grad1) calc(10% - var(--ratio-x) * 20% - var(--correction)),
    var(--grad2) calc(20% - var(--ratio-x) * 20% - var(--correction)),
    var(--grad1) calc(30% - var(--ratio-x) * 20% - var(--correction)),
    hsla(192, 83%, calc(77% - 20% * var(--ratio-x)), 1)
      calc(40% - var(--ratio-x) * 20% - var(--correction)),
    transparent calc(60% - var(--ratio-x) * 20% - var(--correction)),
    var(--grad5) calc(70% - var(--ratio-x) * 20% - var(--correction)),
    var(--grad6) calc(80% - var(--ratio-x) * 20% - var(--correction))
  );
  transition: all 0.2s linear;
  pointer-events: none;
}

/*
.circles {
  position: absolute;
  border-radius: inherit;
  --size: 0;
  overflow: hidden;
  top: var(--size);
  left: var(--size);
  right: var(--size);
  bottom: var(--size);

  &:before {
    content: "";
    position: absolute;
    aspect-ratio: 1/1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(ellipse at 50% 50%,
        hsl(194deg 98% 65% / 41%) 0.25rem,
        transparent 0.25rem,
        transparent) repeat;
    background-size: 1rem 1rem;
    background-position: left top;
    transform: translate(-50%, -50%) rotate(45deg);
  }

  &:after {
    content: "";
    position: absolute;
    aspect-ratio: 1/1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(ellipse at 50% 50%,
        hsl(194deg 98% 65% / 41%) 0.25rem,
        transparent 0.25rem,
        transparent) repeat;
    background-size: 1rem 1rem;
    background-position: left top;
    transform: translate(50%, 100%) rotate(45deg);
  }

  opacity: 0.1;
  transition: all 0.8s ease;
}
*/

.card {
  containter-type: inline-size;
  overflow: hidden;
  width: 50vmin;
  aspect-ratio: 3.126 / 4;
  color: var(--labs-sys-color-on-surface);
  border-radius: 4cqw;
  position: relative;

  --ratio-x: 1;
  --ratio-y: 1;

  transform-style: preserve-3d;
  transition: transform 0.2s linear;
  transform: rotateY(calc(-20deg * var(--ratio-x) * var(--amplitude-x)))
    rotateX(calc(20deg * var(--ratio-y) * var(--amplitude-y)));
  --correction: 100%;
  &:hover {
    transform: rotateY(calc(-20deg * var(--ratio-x) * var(--amplitude-x)))
      rotateX(calc(20deg * var(--ratio-y) * var(--amplitude-y)));
    --correction: 0%;
    .holo-bg {
      opacity: 0.8;
    }

    .circles {
      opacity: 1;
    }
  }

  &.rotate {
    animation: rotate calc(var(--animation-speed) * 1s) ease-in-out infinite;
    --correction: 30%;
    .holo-bg {
      opacity: 0.8;
    }

    .circles {
      opacity: 1;
    }
  }
}

body {
  display: grid;
  place-items: center;
  min-height: 100vh;
  font-family: Inter, "Helvetica Neue", Helvetica, sans-serif;
  perspective: calc(30rem * var(--perspective-amplitude));
  position: relative;
  background: radial-gradient(ellipse at 50% 50%, #151578, black);
  color: var(--c1);
  overflow: hidden;
}

html {
  min-height: 40rem;
}

* {
  box-sizing: border-box;
}

@keyframes rotate {
  from {
    --ratio-x: 1.2;
    --ratio-y: 1.2;
  }

  30% {
    --ratio-x: -1.5;
    --ratio-y: 0.2;
  }
  
  50% {
    --ratio-x: .5;
    --ratio-y: .2;
  }
  
  70% {
    --ratio-x: -1.5;
    --ratio-y: -1.2;
  }

  to {
    --ratio-x: 1.2;
    --ratio-y: 1.2;
  }
}

// Painel de Controle
.controls-panel {
  position: fixed;
  top: 20px;
  right: 20px;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  padding: 20px;
  min-width: 280px;
  z-index: 1000;
  color: white;
  font-family: Inter, sans-serif;
  
  .control-group {
    margin-bottom: 20px;
    
    &:last-child {
      margin-bottom: 0;
    }
    
    label {
      display: block;
      margin-bottom: 8px;
      font-size: 14px;
      font-weight: 500;
      color: #ddd;
    }
    
    input[type="range"] {
      width: 100%;
      height: 6px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 3px;
      outline: none;
      -webkit-appearance: none;
      
      &::-webkit-slider-thumb {
        -webkit-appearance: none;
        width: 18px;
        height: 18px;
        background: linear-gradient(45deg, #0093ff, #51d6fd);
        border-radius: 50%;
        cursor: pointer;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }
      
      &::-moz-range-thumb {
        width: 18px;
        height: 18px;
        background: linear-gradient(45deg, #0093ff, #51d6fd);
        border-radius: 50%;
        cursor: pointer;
        border: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }
    }
    
    .value {
      display: inline-block;
      margin-left: 10px;
      font-size: 12px;
      color: #0093ff;
      font-weight: 600;
      min-width: 30px;
    }
    
    .toggle-btn {
      background: linear-gradient(45deg, #0093ff, #51d6fd);
      border: none;
      color: white;
      padding: 8px 16px;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      transition: all 0.2s ease;
      
      &:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 147, 255, 0.3);
      }
      
      &:active {
        transform: translateY(0);
      }
    }
  }
  .color-row {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 4px;
  }
  input[type="color"] {
    width: 32px;
    height: 32px;
    border: none;
    background: none;
    padding: 0;
    cursor: pointer;
    border-radius: 6px;
    box-shadow: 0 1px 4px rgba(0,0,0,0.15);
    transition: box-shadow 0.2s;
    &:hover {
      box-shadow: 0 2px 8px rgba(0,147,255,0.25);
    }
  }
  input[type="text"] {
    width: 90px;
    padding: 4px 8px;
    border-radius: 4px;
    border: 1px solid #333;
    background: #181828;
    color: #fff;
    font-size: 13px;
    outline: none;
    transition: border 0.2s;
    &:focus {
      border: 1.5px solid #0093ff;
    }
  }
  .color-preview {
    display: inline-block;
    width: 28px;
    height: 28px;
    border-radius: 6px;
    border: 1.5px solid #222;
    box-shadow: 0 1px 4px rgba(0,0,0,0.10);
    margin-left: 2px;
  }
}
